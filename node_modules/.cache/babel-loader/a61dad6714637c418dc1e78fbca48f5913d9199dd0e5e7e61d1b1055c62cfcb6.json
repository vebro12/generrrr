{"ast":null,"code":"var _jsxFileName = \"/Users/vikas/Desktop/hello/calo/src/App.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import MandateAccessButton from './mandateaccess'; // Adjust the path as per your file structure\n\n// const App = () => {\n//   const endpoints = [0, 1]; \n\n//   return (\n//     <div>\n//       {endpoints.map(endpoint => (\n//         <div key={endpoint}>\n//           <MandateAccessButton endpoint={endpoint} />\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport MandateAccessButton from './mandateaccess'; // Adjust the path as per your file structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const endpoints = [0, 1]; // Example endpoints, adjust as needed\n  const [mandateDetails, setMandateDetails] = useState([]);\n  const handleFetchData = async () => {\n    try {\n      const responsePromises = endpoints.map(endpoint => fetch(`http://localhost:3010/${endpoint}`).then(response => {\n        if (!response.ok) {\n          throw new Error(`Failed to fetch data from endpoint ${endpoint}. Status: ${response.status}`);\n        }\n        return response.json();\n      }));\n      const dataArray = await Promise.all(responsePromises);\n      setMandateDetails(dataArray);\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      // Handle error state or notification here if needed\n    }\n  };\n  const handleButtonClick = async () => {\n    try {\n      const response = await fetch(`http://localhost:3010/${endpoint}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      const data = await response.json();\n      console.log('Fetched data:', data);\n\n      // Example handling for single object response\n      const details = Array.isArray(data) ? data.map(item => ({\n        traderMandateId: item.traderMandateId,\n        traderName: item.traderName\n      })) : [{\n        traderMandateId: data.traderMandateId,\n        traderName: data.traderName\n      }];\n      setShowDetails(true);\n      setMandateDetails(details);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      // Handle error state or notification here if needed\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchData,\n      children: \"Generate Mandate Access\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), mandateDetails.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: endpoints.map((endpoint, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Endpoint \", endpoint, \" Details:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(MandateAccessButton, {\n          endpointData: mandateDetails[index]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)]\n      }, endpoint, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"YzPsmdFNX95TIwHV/mBSeR+9nmI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MandateAccessButton","jsxDEV","_jsxDEV","App","_s","endpoints","mandateDetails","setMandateDetails","handleFetchData","responsePromises","map","endpoint","fetch","then","response","ok","Error","status","json","dataArray","Promise","all","error","console","message","handleButtonClick","data","log","details","Array","isArray","item","traderMandateId","traderName","setShowDetails","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","index","endpointData","_c","$RefreshReg$"],"sources":["/Users/vikas/Desktop/hello/calo/src/App.js"],"sourcesContent":["// import React from 'react';\n// import MandateAccessButton from './mandateaccess'; // Adjust the path as per your file structure\n\n// const App = () => {\n//   const endpoints = [0, 1]; \n\n//   return (\n//     <div>\n//       {endpoints.map(endpoint => (\n//         <div key={endpoint}>\n//           <MandateAccessButton endpoint={endpoint} />\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport MandateAccessButton from './mandateaccess'; // Adjust the path as per your file structure\n\nconst App = () => {\n  const endpoints = [0, 1]; // Example endpoints, adjust as needed\n  const [mandateDetails, setMandateDetails] = useState([]);\n\n  const handleFetchData = async () => {\n    try {\n      const responsePromises = endpoints.map(endpoint =>\n        fetch(`http://localhost:3010/${endpoint}`)\n          .then(response => {\n            if (!response.ok) {\n              throw new Error(`Failed to fetch data from endpoint ${endpoint}. Status: ${response.status}`);\n            }\n            return response.json();\n          })\n      );\n\n      const dataArray = await Promise.all(responsePromises);\n      setMandateDetails(dataArray);\n    } catch (error) {\n      console.error('Error fetching data:', error.message);\n      // Handle error state or notification here if needed\n    }\n  };\n\n  const handleButtonClick = async () => {\n        try {\n          const response = await fetch(`http://localhost:3010/${endpoint}`);\n          if (!response.ok) {\n            throw new Error('Failed to fetch data');\n          }\n          const data = await response.json();\n          console.log('Fetched data:', data);\n      \n          // Example handling for single object response\n          const details = Array.isArray(data) ? data.map(item => ({\n            traderMandateId: item.traderMandateId,\n            traderName: item.traderName\n          })) : [{\n            traderMandateId: data.traderMandateId,\n            traderName: data.traderName\n          }];\n      \n          setShowDetails(true);\n          setMandateDetails(details);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n          // Handle error state or notification here if needed\n        }\n      };\n\n  return (\n    <div>\n      <button onClick={handleFetchData}>Generate Mandate Access</button>\n      {mandateDetails.length > 0 && (\n        <div>\n          {endpoints.map((endpoint, index) => (\n            <div key={endpoint}>\n              <h2>Endpoint {endpoint} Details:</h2>\n              <MandateAccessButton endpointData={mandateDetails[index]} />\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}